      <launch>
      <arg name="arg_x" default="0.00" />
      <arg name="arg_y" default="0.00" />
      <arg name="arg_z" default="0.00" />
      <arg name="arg_R" default="0.00" />
      <arg name="arg_P" default="0.00" />
      <arg name="arg_Y" default="0.00" />

      <!-- Cargar el URDF -->
      <param name="robot_description" textfile="$(find NuestroRobot4)/urdf/NuestroRobot4.urdf"/>

      <!-- Mundo vacío de Gazebo -->
      <include file="$(find gazebo_ros)/launch/empty_world.launch" />

      <!-- Transformación estática -->
      <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />

      <!-- Spawn del modelo en Gazebo -->
      <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
            args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y)
                  -param robot_description -urdf -model NuestroRobot4
                  -J Joint_1 0.0 -J Joint_2 0.0 -J Joint_3 0.0 -J Joint_4 0.0 -J Joint_Left 0.0" />
    
      <!-- Cargar el archivo YAML del controlador -->
      <rosparam file="$(find NuestroRobot4)/config/joint_trajectory_controller.yaml" command="load" />

      <!-- Lanzar los controladores -->
      <node name= "controller_spawner" pkg= "controller_manager" type="spawner"
            respawn="false" output="screen" 
            args="joint_state_controller robot_arm_controller hand_ee_controller"/>
    
      <!-- Publicador de estados del robot -->
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            respawn="false" output="screen"/>

</launch>

